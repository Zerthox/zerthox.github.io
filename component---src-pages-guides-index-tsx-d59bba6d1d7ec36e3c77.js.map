{"version":3,"file":"component---src-pages-guides-index-tsx-d59bba6d1d7ec36e3c77.js","mappings":"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","sources":["webpack://zerthox.github.io/./src/components/general/center.tsx","webpack://zerthox.github.io/./src/components/general/center.module.scss","webpack://zerthox.github.io/./src/components/general/link.tsx","webpack://zerthox.github.io/./src/components/general/scroll.tsx","webpack://zerthox.github.io/./src/hooks/site.ts","webpack://zerthox.github.io/./src/components/layout/header.tsx","webpack://zerthox.github.io/./src/components/layout/header.module.scss","webpack://zerthox.github.io/./src/components/layout/footer.tsx","webpack://zerthox.github.io/./src/components/layout/footer.module.scss","webpack://zerthox.github.io/./src/components/layout/layout.tsx","webpack://zerthox.github.io/./src/components/layout/layout.module.scss","webpack://zerthox.github.io/./src/components/layout/seo.tsx","webpack://zerthox.github.io/./src/components/layout/title.tsx","webpack://zerthox.github.io/./src/components/layout/title.module.scss","webpack://zerthox.github.io/./src/components/list/list.tsx","webpack://zerthox.github.io/./src/components/list/list.module.scss","webpack://zerthox.github.io/./src/components/user/avatar.tsx","webpack://zerthox.github.io/./src/components/user/avatar.module.scss","webpack://zerthox.github.io/./src/components/user/user.tsx","webpack://zerthox.github.io/./src/components/user/user.module.scss","webpack://zerthox.github.io/./src/hooks/users.ts","webpack://zerthox.github.io/./src/hooks/posts.ts","webpack://zerthox.github.io/./src/pages/guides/index.tsx","webpack://zerthox.github.io/./node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["import React from \"react\";\nimport * as styles from \"./center.module.scss\";\n\nexport interface CenterProps {\n    children?: React.ReactNode;\n}\n\nexport const Center = ({children}: CenterProps): JSX.Element => (\n    <div className={styles.container}>{children}</div>\n);\n","// extracted by mini-css-extract-plugin\nexport var container = \"center-module--container--d71dc\";","import React from \"react\";\nimport {Link as GatsbyLink} from \"gatsby\";\n\nexport interface LinkProps {\n    to: string;\n    className?: string;\n    children?: React.ReactNode;\n    onClick?: () => void;\n}\n\nexport const Link = ({to, className, onClick, children}: LinkProps): JSX.Element => {\n    if (to && to.match(/^[/.#]/) && !to.match(/\\.(png|jpg|jpeg)$/)) {\n        return (\n            <GatsbyLink\n                to={to}\n                className={className}\n                onClick={onClick}\n            >{children}</GatsbyLink>\n        );\n    } else {\n        return (\n            <a\n                href={to}\n                className={className}\n                onClick={onClick}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >{children}</a>\n        );\n    }\n};\n","import React, {forwardRef, useEffect} from \"react\";\n\nexport const scrollToElement = (element: HTMLElement): void => window.scrollTo(0, element.offsetTop);\n\nexport const scrollToRef = <E extends HTMLElement>(ref: React.RefObject<E>): void => scrollToElement(ref.current);\n\nexport const scrollToId = (id: string): void => scrollToElement(document.getElementById(id));\n\ninterface RequiredProps<E extends HTMLElement> {\n    className?: string;\n    children?: React.ReactNode;\n    id: string;\n    ref: React.Ref<E>;\n}\n\nexport interface ScrollTargetProps<E extends HTMLElement> {\n    type?: React.ComponentType<RequiredProps<E>> | string;\n    id: string;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nconst ScrollTarget = <E extends HTMLElement>(\n    {type, id, className, children}: ScrollTargetProps<E>,\n    ref: React.RefObject<E>\n): JSX.Element => {\n    const Element = type;\n    useEffect(() => {\n        if (window.location.hash === `#${id}`) {\n            scrollToRef(ref);\n        }\n    }, [id, ref]);\n\n    return (\n        <Element className={className} id={id} ref={ref}>{children}</Element>\n    );\n};\n\nconst ForwardContainer = forwardRef(ScrollTarget);\n\nexport {ForwardContainer as ScrollTarget};\n","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface SiteMeta {\n    title: string;\n    description: string;\n    author: string;\n    siteUrl: string;\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMeta;\n    };\n}\n\nconst useSiteData = () => useStaticQuery<SiteData>(graphql`\n    query SiteMeta{\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`);\n\nexport const useSiteMeta = (): SiteMeta => useSiteData().site.siteMetadata;\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport {Avatar} from \"../user\";\nimport {useSiteMeta} from \"../../hooks/site\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./header.module.scss\";\n\nexport interface LinkEntry {\n    text: string;\n    link: string;\n}\n\nexport interface HeaderProps {\n    links: LinkEntry[];\n}\n\nexport const Header = ({links}: HeaderProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const {avatar} = useUser(siteMeta.author);\n\n    return (\n        <div className={styles.header}>\n            <Link className={styles.title} to=\"/\">\n                <Avatar url={avatar} size={40}/>\n                <span className={styles.name}>Zerthox</span>\n            </Link>\n            <div className={styles.bar}>\n                {links.map(({text, link}, i) => (\n                    <Link key={i} to={link} className={styles.item} activeClassName={styles.active} partiallyActive={link !== \"/\"}>{text}</Link>\n                ))}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var active = \"header-module--active--583af\";\nexport var bar = \"header-module--bar--d4a44\";\nexport var header = \"header-module--header--a0daf\";\nexport var item = \"header-module--item--e3e25\";\nexport var name = \"header-module--name--70fa5\";\nexport var title = \"header-module--title--78ab6\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport * as styles from \"./footer.module.scss\";\n\nconst processEntries = (links: TextEntry[]) => links.map(({text, link}, i) => (\n    <React.Fragment key={i}>\n        {i !== 0 && \" | \"}\n        {link ? <Link className={styles.link} to={link}>{text}</Link> : text}\n    </React.Fragment>\n));\n\nexport interface TextEntry {\n    text: string;\n    link?: string;\n}\n\nexport interface FooterProps {\n    left: TextEntry[];\n    right: TextEntry[];\n}\n\nexport const Footer = ({left, right}: FooterProps): JSX.Element => (\n    <div className={styles.footer}>\n        <div className={styles.left}>{processEntries(left)}</div>\n        <div className={styles.right}>{processEntries(right)}</div>\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var footer = \"footer-module--footer--d155e\";\nexport var left = \"footer-module--left--d6390\";\nexport var link = \"footer-module--link--06b40\";\nexport var right = \"footer-module--right--83036\";","import React from \"react\";\nimport {Header} from \"./header\";\nimport {Footer} from \"./footer\";\nimport {User} from \"../user\";\nimport * as styles from \"./layout.module.scss\";\n\nexport interface LayoutProps {\n    title?: string;\n    author?: string;\n    date?: string;\n    updated?: string;\n    readTime?: number;\n    noContent?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Layout = ({title, author, date, updated, readTime, noContent = false, children}: LayoutProps): JSX.Element => {\n    const hasInfo = author || date || readTime;\n\n    return (\n        <div className={styles.main}>\n            <Header links={[\n                {\n                    text: \"Home\",\n                    link: \"/\"\n                },\n                {\n                    text: \"Guides\",\n                    link: \"/guides\"\n                }\n            ]}></Header>\n            <div className={styles.body}>\n                {title ? (\n                    <div className={styles.title}>\n                        <div className={styles.heading}>{title}</div>\n                        {hasInfo ? (\n                            <div className={styles.info}>\n                                {author ? (\n                                    <div className={styles.author}>\n                                        by <User name={author}/>\n                                    </div>\n                                ): null}\n                                {date ? (\n                                    <div className={styles.date}>\n                                        {date}\n                                        {updated ? <span className={styles.updated}> (Updated: {updated})</span> : null}\n                                        {readTime ? (\n                                            <>\n                                                <span className={styles.separator}>|</span>\n                                                <span>{readTime}min read</span>\n                                            </>\n                                        ) : null}\n                                    </div>\n                                ) : null}\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n                {noContent ? children : (\n                    <div className={styles.content}>{children}</div>\n                )}\n            </div>\n            <Footer\n                left={[\n                    {\n                        text: \"Copyright 2021 Zerthox\"\n                    }\n                ]}\n                right={[\n                    {\n                        text: \"GitHub\",\n                        link: \"https://github.com/zerthox\"\n                    },\n                    {\n                        text: \"Source\",\n                        link: \"https://github.com/zerthox/zerthox.github.io\"\n                    }\n                ]}\n            />\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var author = \"layout-module--author--34e41\";\nexport var body = \"layout-module--body--a3b83\";\nexport var content = \"layout-module--content--ba793\";\nexport var date = \"layout-module--date--211e7\";\nexport var heading = \"layout-module--heading--dd2ea\";\nexport var info = \"layout-module--info--8110f\";\nexport var main = \"layout-module--main--3f0fd\";\nexport var separator = \"layout-module--separator--3ea5b\";\nexport var title = \"layout-module--title--c05ab\";\nexport var updated = \"layout-module--updated--8118a\";","import React from \"react\";\nimport {useSiteMeta} from \"../../hooks/site\";\n\nexport type MetaProps = JSX.IntrinsicElements[\"meta\"];\n\nexport interface SEOProps {\n    title?: string;\n    fullTitle?: boolean;\n    description?: string;\n    author?: string;\n    meta?: MetaProps[];\n    children?: React.ReactNode;\n}\n\nexport const SEO = ({fullTitle = false, meta = [], children, ...props}: SEOProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const title = [props.title, !fullTitle ? siteMeta.title : null].join(\" - \");\n    const description = props.description ?? siteMeta.description;\n    const author = props.author ?? siteMeta.author;\n\n    return (\n        <>\n            <title>{title}</title>\n            {[\n                {name: \"description\", content: description},\n                {property: \"og:title\", content: title},\n                {property: \"og:description\", content: description},\n                {property: \"og:type\", content: \"website\"},\n                {name: \"twitter:card\", content: \"summary\"},\n                {name: \"twitter:creator\", content: author},\n                {name: \"twitter:title\", content: title},\n                {name: \"twitter:description\", content: description},\n                ...meta\n            ].map((props, i) => <meta key={i} {...props}/>)}\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport * as styles from \"./title.module.scss\";\n\nexport interface TitleProps {\n    sub?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Title = ({sub = false, children}: TitleProps): JSX.Element => (\n    <span className={sub ? styles.subtitle : styles.title}>\n        {children}\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport var subtitle = \"title-module--subtitle--ec44c\";\nexport var title = \"title-module--title--87401\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {User} from \"../user\";\nimport * as styles from \"./list.module.scss\";\n\nexport interface ListItemProps {\n    name: string;\n    to: string;\n    description?: string;\n    date?: string;\n    author?: string;\n}\n\nexport const ListItem = ({name, description, date, author, to}: ListItemProps): JSX.Element => (\n    <div className={styles.item}>\n        <Link className={styles.link} to={to}>\n            <div className={styles.title}>\n                <div className={styles.name}>{name}</div>\n                {date ? (\n                    <div className={styles.date}>{date}</div>\n                ) : null}\n            </div>\n            {description ? <div className={styles.description}>{description}</div> : null}\n        </Link>\n        {author ? (\n            <div className={styles.author}>\n                by <User name={author}/>\n            </div>\n        ) : null}\n    </div>\n);\n\nexport interface ListProps {\n    entries: ListItemProps[];\n}\n\nexport const List = ({entries}: ListProps): JSX.Element => (\n    <div className={styles.list}>\n        {entries.map((props, i) => (\n            <ListItem key={i} {...props}/>\n        ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var author = \"list-module--author--82ff7\";\nexport var date = \"list-module--date--f1eea\";\nexport var description = \"list-module--description--64b4a\";\nexport var item = \"list-module--item--2ff2e\";\nexport var link = \"list-module--link--a777c\";\nexport var list = \"list-module--list--48ac1\";\nexport var name = \"list-module--name--27e7d\";\nexport var title = \"list-module--title--83b07\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport * as styles from \"./avatar.module.scss\";\n\nexport interface AvatarProps {\n    url: string;\n    size?: number;\n    className?: string;\n}\n\nexport const Avatar = ({url, size = 30, className}: AvatarProps): JSX.Element => (\n    <div\n        className={clsx(className, styles.avatar)}\n        style={{\n            backgroundImage: `url(${url})`,\n            width: size,\n            height: size\n        }}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"avatar-module--avatar--9b73c\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {Avatar} from \"./avatar\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./user.module.scss\";\n\nexport interface UserProps {\n    name: string;\n}\n\nexport const User = ({name}: UserProps): JSX.Element => {\n    const {avatar, links} = useUser(name);\n\n    return (\n        <Link className={styles.container} to={`https://github.com/${links.github}`}>\n            <Avatar className={styles.avatar} url={avatar} size={30} />\n            <div className={styles.name}>{name}</div>\n        </Link>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"user-module--avatar--3d0a3\";\nexport var container = \"user-module--container--b30bb\";\nexport var name = \"user-module--name--d5384\";","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface User {\n    name: string;\n    avatar: string;\n    links: {\n        github: string;\n    };\n}\n\ninterface UserData {\n    allUsersJson: {\n        nodes: User[];\n    };\n}\n\nconst useUserData = () => useStaticQuery<UserData>(graphql`\n    query UserData {\n        allUsersJson {\n            nodes {\n                name\n                avatar\n                links {\n                    github\n                }\n            }\n        }\n    }\n`);\n\nexport const useUsers = (): User[] => useUserData().allUsersJson.nodes;\n\nexport const useUser = (name: string): User | null => useUsers().find((user) => user.name === name) ?? null;\n","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface Frontmatter {\n    title: string;\n    author?: string;\n    date?: string;\n    updated?: string;\n    tags?: string[];\n    slug?: string;\n}\n\nexport interface Fields {\n    slug: string;\n    timeToRead: number;\n}\n\nexport interface Post {\n    frontmatter: Frontmatter;\n    fields: Fields;\n    excerpt: string;\n}\n\ninterface PostData {\n    allMdx: {\n        nodes: Post[];\n    };\n}\n\nconst usePostData = () => useStaticQuery<PostData>(graphql`\n    query Posts {\n        allMdx(sort: {frontmatter: {date: DESC}}) {\n            nodes {\n                frontmatter {\n                    title\n                    date(formatString: \"DD MMMM YYYY\")\n                    updated(formatString: \"DD MMMM YYYY\")\n                    author\n                    tags\n                }\n                excerpt\n                fields {\n                    slug\n                    timeToRead\n                }\n            }\n        }\n    }\n`);\n\nexport const usePosts = (): Post[] => usePostData().allMdx.nodes;\n\nexport const usePostsIn = (prefix: string): Post[] => usePosts().filter(({fields}) => fields.slug.startsWith(\"/\" + prefix));\n","import React from \"react\";\nimport {Layout, SEO} from \"../../components/layout\";\nimport {List} from \"../../components/list\";\nimport {usePostsIn} from \"../../hooks/posts\";\n\nconst Blog = (): JSX.Element => {\n    const posts = usePostsIn(\"guides\");\n\n    return (\n        <Layout title=\"Guides\">\n            {posts.length > 0 ? (\n                <List\n                    entries={posts.map(({frontmatter, fields, excerpt}) => ({\n                        name: frontmatter.title,\n                        to: fields.slug,\n                        date: frontmatter.date,\n                        author: frontmatter.author,\n                        description: excerpt\n                    }))}\n                />\n            ) : \"Nothing here (yet).\"}\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const Head = (): JSX.Element => <SEO title=\"Guides\"/>;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["Center","_ref","children","React","className","Link","to","onClick","match","GatsbyLink","href","target","rel","scrollToElement","element","window","scrollTo","offsetTop","scrollToRef","ref","current","ScrollTarget","type","id","Element","useEffect","location","hash","ForwardContainer","forwardRef","useSiteMeta","useStaticQuery","site","siteMetadata","Header","links","siteMeta","avatar","useUser","author","Avatar","url","size","map","_ref2","i","text","link","key","activeClassName","partiallyActive","processEntries","Footer","left","right","Layout","title","date","updated","readTime","noContent","hasInfo","User","name","SEO","_props$description","_props$author","fullTitle","meta","props","join","description","content","property","concat","_toConsumableArray","Object","assign","Title","sub","ListItem","List","entries","clsx","style","backgroundImage","width","height","github","useUsers","allUsersJson","nodes","_useUsers$find","find","user","usePosts","allMdx","Blog","posts","prefix","filter","fields","slug","startsWith","length","frontmatter","excerpt","Head","r","e","t","f","n","Array","isArray","arguments"],"sourceRoot":""}