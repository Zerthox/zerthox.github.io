{"version":3,"file":"649475f6c648ef312c315c910ffd058547dabaa5-947770342a9e7bf0921f.js","mappings":"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","sources":["webpack://zerthox.github.io/./node_modules/clsx/dist/clsx.m.js","webpack://zerthox.github.io/./src/components/general/center.tsx","webpack://zerthox.github.io/./src/components/general/center.module.scss","webpack://zerthox.github.io/./src/components/general/link.tsx","webpack://zerthox.github.io/./src/components/general/scroll.tsx","webpack://zerthox.github.io/./src/hooks/site.ts","webpack://zerthox.github.io/./src/components/layout/header.tsx","webpack://zerthox.github.io/./src/components/layout/header.module.scss","webpack://zerthox.github.io/./src/components/layout/footer.tsx","webpack://zerthox.github.io/./src/components/layout/footer.module.scss","webpack://zerthox.github.io/./src/components/layout/layout.tsx","webpack://zerthox.github.io/./src/components/layout/layout.module.scss","webpack://zerthox.github.io/./src/components/layout/seo.tsx","webpack://zerthox.github.io/./src/components/layout/title.tsx","webpack://zerthox.github.io/./src/components/layout/title.module.scss","webpack://zerthox.github.io/./src/components/list/list.tsx","webpack://zerthox.github.io/./src/components/list/list.module.scss","webpack://zerthox.github.io/./src/components/markdown/anchor.tsx","webpack://zerthox.github.io/./src/components/markdown/anchor.module.scss","webpack://zerthox.github.io/./src/components/markdown/paragraph.tsx","webpack://zerthox.github.io/./src/components/markdown/paragraph.module.scss","webpack://zerthox.github.io/./src/components/markdown/heading.module.scss","webpack://zerthox.github.io/./src/components/markdown/heading.tsx","webpack://zerthox.github.io/./node_modules/prism-react-renderer/prism/index.js","webpack://zerthox.github.io/./node_modules/prism-react-renderer/dist/index.js","webpack://zerthox.github.io/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://zerthox.github.io/./src/components/markdown/theme.ts","webpack://zerthox.github.io/./src/components/markdown/code.tsx","webpack://zerthox.github.io/./src/components/markdown/code.module.scss","webpack://zerthox.github.io/./src/components/banner/banner.module.scss","webpack://zerthox.github.io/./src/components/banner/banner.tsx","webpack://zerthox.github.io/./src/components/codetabs/codetabs.tsx","webpack://zerthox.github.io/./src/components/markdown/markdown.tsx","webpack://zerthox.github.io/./src/components/codetabs/codetabs.module.scss","webpack://zerthox.github.io/./src/components/user/avatar.tsx","webpack://zerthox.github.io/./src/components/user/avatar.module.scss","webpack://zerthox.github.io/./src/components/user/user.tsx","webpack://zerthox.github.io/./src/components/user/user.module.scss","webpack://zerthox.github.io/./src/hooks/users.ts","webpack://zerthox.github.io/./node_modules/lodash/_Symbol.js","webpack://zerthox.github.io/./node_modules/lodash/_arrayMap.js","webpack://zerthox.github.io/./node_modules/lodash/_arrayReduce.js","webpack://zerthox.github.io/./node_modules/lodash/_asciiWords.js","webpack://zerthox.github.io/./node_modules/lodash/_baseGetTag.js","webpack://zerthox.github.io/./node_modules/lodash/_basePropertyOf.js","webpack://zerthox.github.io/./node_modules/lodash/_baseToString.js","webpack://zerthox.github.io/./node_modules/lodash/_createCompounder.js","webpack://zerthox.github.io/./node_modules/lodash/_deburrLetter.js","webpack://zerthox.github.io/./node_modules/lodash/_freeGlobal.js","webpack://zerthox.github.io/./node_modules/lodash/_getRawTag.js","webpack://zerthox.github.io/./node_modules/lodash/_hasUnicodeWord.js","webpack://zerthox.github.io/./node_modules/lodash/_objectToString.js","webpack://zerthox.github.io/./node_modules/lodash/_root.js","webpack://zerthox.github.io/./node_modules/lodash/_unicodeWords.js","webpack://zerthox.github.io/./node_modules/lodash/deburr.js","webpack://zerthox.github.io/./node_modules/lodash/isArray.js","webpack://zerthox.github.io/./node_modules/lodash/isObjectLike.js","webpack://zerthox.github.io/./node_modules/lodash/isSymbol.js","webpack://zerthox.github.io/./node_modules/lodash/kebabCase.js","webpack://zerthox.github.io/./node_modules/lodash/toString.js","webpack://zerthox.github.io/./node_modules/lodash/words.js","webpack://zerthox.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from \"react\";\nimport * as styles from \"./center.module.scss\";\n\nexport interface CenterProps {\n    children?: React.ReactNode;\n}\n\nexport const Center = ({children}: CenterProps): JSX.Element => (\n    <div className={styles.container}>{children}</div>\n);\n","// extracted by mini-css-extract-plugin\nexport var container = \"center-module--container--d71dc\";","import React from \"react\";\nimport {Link as GatsbyLink} from \"gatsby\";\n\nexport interface LinkProps {\n    to: string;\n    className?: string;\n    children?: React.ReactNode;\n    onClick?: () => void;\n}\n\nexport const Link = ({to, className, onClick, children}: LinkProps): JSX.Element => {\n    if (to && to.match(/^[/.#]/) && !to.match(/\\.(png|jpg|jpeg)$/)) {\n        return (\n            <GatsbyLink\n                to={to}\n                className={className}\n                onClick={onClick}\n            >{children}</GatsbyLink>\n        );\n    } else {\n        return (\n            <a\n                href={to}\n                className={className}\n                onClick={onClick}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >{children}</a>\n        );\n    }\n};\n","import React, {forwardRef, useEffect} from \"react\";\n\nexport const scrollToElement = (element: HTMLElement): void => window.scrollTo(0, element.offsetTop);\n\nexport const scrollToRef = <E extends HTMLElement>(ref: React.RefObject<E>): void => scrollToElement(ref.current);\n\nexport const scrollToId = (id: string): void => scrollToElement(document.getElementById(id));\n\ninterface RequiredProps<E extends HTMLElement> {\n    className?: string;\n    children?: React.ReactNode;\n    id: string;\n    ref: React.Ref<E>;\n}\n\nexport interface ScrollTargetProps<E extends HTMLElement> {\n    type?: React.ComponentType<RequiredProps<E>> | string;\n    id: string;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nconst ScrollTarget = <E extends HTMLElement>(\n    {type, id, className, children}: ScrollTargetProps<E>,\n    ref: React.RefObject<E>\n): JSX.Element => {\n    const Element = type;\n    useEffect(() => {\n        if (window.location.hash === `#${id}`) {\n            scrollToRef(ref);\n        }\n    }, [id, ref]);\n\n    return (\n        <Element className={className} id={id} ref={ref}>{children}</Element>\n    );\n};\n\nconst ForwardContainer = forwardRef(ScrollTarget);\n\nexport {ForwardContainer as ScrollTarget};\n","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface SiteMeta {\n    title: string;\n    description: string;\n    author: string;\n    siteUrl: string;\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMeta;\n    };\n}\n\nconst useSiteData = () => useStaticQuery<SiteData>(graphql`\n    query SiteMeta{\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n            }\n        }\n    }\n`);\n\nexport const useSiteMeta = (): SiteMeta => useSiteData().site.siteMetadata;\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport {Avatar} from \"../user\";\nimport {useSiteMeta} from \"../../hooks/site\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./header.module.scss\";\n\nexport interface LinkEntry {\n    text: string;\n    link: string;\n}\n\nexport interface HeaderProps {\n    links: LinkEntry[];\n}\n\nexport const Header = ({links}: HeaderProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const {avatar} = useUser(siteMeta.author);\n\n    return (\n        <div className={styles.header}>\n            <Link className={styles.title} to=\"/\">\n                <Avatar url={avatar} size={40}/>\n                <span className={styles.name}>Zerthox</span>\n            </Link>\n            <div className={styles.bar}>\n                {links.map(({text, link}, i) => (\n                    <Link key={i} to={link} className={styles.item} activeClassName={styles.active} partiallyActive={link !== \"/\"}>{text}</Link>\n                ))}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var active = \"header-module--active--583af\";\nexport var bar = \"header-module--bar--d4a44\";\nexport var header = \"header-module--header--a0daf\";\nexport var item = \"header-module--item--e3e25\";\nexport var name = \"header-module--name--70fa5\";\nexport var title = \"header-module--title--78ab6\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport * as styles from \"./footer.module.scss\";\n\nconst processEntries = (links: TextEntry[]) => links.map(({text, link}, i) => (\n    <React.Fragment key={i}>\n        {i !== 0 && \" | \"}\n        {link ? <Link className={styles.link} to={link}>{text}</Link> : text}\n    </React.Fragment>\n));\n\nexport interface TextEntry {\n    text: string;\n    link?: string;\n}\n\nexport interface FooterProps {\n    left: TextEntry[];\n    right: TextEntry[];\n}\n\nexport const Footer = ({left, right}: FooterProps): JSX.Element => (\n    <div className={styles.footer}>\n        <div className={styles.left}>{processEntries(left)}</div>\n        <div className={styles.right}>{processEntries(right)}</div>\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var footer = \"footer-module--footer--d155e\";\nexport var left = \"footer-module--left--d6390\";\nexport var link = \"footer-module--link--06b40\";\nexport var right = \"footer-module--right--83036\";","import React from \"react\";\nimport {Header} from \"./header\";\nimport {Footer} from \"./footer\";\nimport {User} from \"../user\";\nimport * as styles from \"./layout.module.scss\";\n\nexport interface LayoutProps {\n    title?: string;\n    author?: string;\n    date?: string;\n    updated?: string;\n    readTime?: number;\n    noContent?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Layout = ({title, author, date, updated, readTime, noContent = false, children}: LayoutProps): JSX.Element => {\n    const hasInfo = author || date || readTime;\n\n    return (\n        <div className={styles.main}>\n            <Header links={[\n                {\n                    text: \"Home\",\n                    link: \"/\"\n                },\n                {\n                    text: \"Guides\",\n                    link: \"/guides\"\n                }\n            ]}></Header>\n            <div className={styles.body}>\n                {title ? (\n                    <div className={styles.title}>\n                        <div className={styles.heading}>{title}</div>\n                        {hasInfo ? (\n                            <div className={styles.info}>\n                                {author ? (\n                                    <div className={styles.author}>\n                                        by <User name={author}/>\n                                    </div>\n                                ): null}\n                                {date ? (\n                                    <div className={styles.date}>\n                                        {date}\n                                        {updated ? <span className={styles.updated}> (Updated: {updated})</span> : null}\n                                        {readTime ? (\n                                            <>\n                                                <span className={styles.separator}>|</span>\n                                                <span>{readTime}min read</span>\n                                            </>\n                                        ) : null}\n                                    </div>\n                                ) : null}\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n                {noContent ? children : (\n                    <div className={styles.content}>{children}</div>\n                )}\n            </div>\n            <Footer\n                left={[\n                    {\n                        text: \"Copyright 2021 Zerthox\"\n                    }\n                ]}\n                right={[\n                    {\n                        text: \"GitHub\",\n                        link: \"https://github.com/zerthox\"\n                    },\n                    {\n                        text: \"Source\",\n                        link: \"https://github.com/zerthox/zerthox.github.io\"\n                    }\n                ]}\n            />\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var author = \"layout-module--author--34e41\";\nexport var body = \"layout-module--body--a3b83\";\nexport var content = \"layout-module--content--ba793\";\nexport var date = \"layout-module--date--211e7\";\nexport var heading = \"layout-module--heading--dd2ea\";\nexport var info = \"layout-module--info--8110f\";\nexport var main = \"layout-module--main--3f0fd\";\nexport var separator = \"layout-module--separator--3ea5b\";\nexport var title = \"layout-module--title--c05ab\";\nexport var updated = \"layout-module--updated--8118a\";","import React from \"react\";\nimport {useSiteMeta} from \"../../hooks/site\";\n\nexport type MetaProps = JSX.IntrinsicElements[\"meta\"];\n\nexport interface SEOProps {\n    title?: string;\n    fullTitle?: boolean;\n    description?: string;\n    author?: string;\n    meta?: MetaProps[];\n    children?: React.ReactNode;\n}\n\nexport const SEO = ({fullTitle = false, meta = [], children, ...props}: SEOProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const title = [props.title, !fullTitle ? siteMeta.title : null].join(\" - \");\n    const description = props.description ?? siteMeta.description;\n    const author = props.author ?? siteMeta.author;\n\n    return (\n        <>\n            <title>{title}</title>\n            {[\n                {name: \"description\", content: description},\n                {property: \"og:title\", content: title},\n                {property: \"og:description\", content: description},\n                {property: \"og:type\", content: \"website\"},\n                {name: \"twitter:card\", content: \"summary\"},\n                {name: \"twitter:creator\", content: author},\n                {name: \"twitter:title\", content: title},\n                {name: \"twitter:description\", content: description},\n                ...meta\n            ].map((props, i) => <meta key={i} {...props}/>)}\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport * as styles from \"./title.module.scss\";\n\nexport interface TitleProps {\n    sub?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Title = ({sub = false, children}: TitleProps): JSX.Element => (\n    <span className={sub ? styles.subtitle : styles.title}>\n        {children}\n    </span>\n);\n","// extracted by mini-css-extract-plugin\nexport var subtitle = \"title-module--subtitle--ec44c\";\nexport var title = \"title-module--title--87401\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {User} from \"../user\";\nimport * as styles from \"./list.module.scss\";\n\nexport interface ListItemProps {\n    name: string;\n    to: string;\n    description?: string;\n    date?: string;\n    author?: string;\n}\n\nexport const ListItem = ({name, description, date, author, to}: ListItemProps): JSX.Element => (\n    <div className={styles.item}>\n        <Link className={styles.link} to={to}>\n            <div className={styles.title}>\n                <div className={styles.name}>{name}</div>\n                {date ? (\n                    <div className={styles.date}>{date}</div>\n                ) : null}\n            </div>\n            {description ? <div className={styles.description}>{description}</div> : null}\n        </Link>\n        {author ? (\n            <div className={styles.author}>\n                by <User name={author}/>\n            </div>\n        ) : null}\n    </div>\n);\n\nexport interface ListProps {\n    entries: ListItemProps[];\n}\n\nexport const List = ({entries}: ListProps): JSX.Element => (\n    <div className={styles.list}>\n        {entries.map((props, i) => (\n            <ListItem key={i} {...props}/>\n        ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var author = \"list-module--author--82ff7\";\nexport var date = \"list-module--date--f1eea\";\nexport var description = \"list-module--description--64b4a\";\nexport var item = \"list-module--item--2ff2e\";\nexport var link = \"list-module--link--a777c\";\nexport var list = \"list-module--list--48ac1\";\nexport var name = \"list-module--name--27e7d\";\nexport var title = \"list-module--title--83b07\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport {Link} from \"../general\";\nimport * as styles from \"./anchor.module.scss\";\n\nexport interface AnchorProps {\n    href?: string;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nexport const Anchor = ({href, className, children}: AnchorProps): JSX.Element => (\n    <Link\n        className={clsx(className, styles.anchor, {\n            [styles.text]: typeof children === \"string\"\n        })}\n        to={href}\n    >{children}</Link>\n);\n\nexport interface AnchorButtonProps {\n    className?: string;\n    children?: React.ReactNode;\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport const AnchorButton = ({className, children, onClick}: AnchorButtonProps): JSX.Element => (\n    <span\n        className={clsx(className, styles.anchor, {\n            [styles.text]: typeof children === \"string\"\n        })}\n        onClick={onClick}\n    >{children}</span>\n);\n","// extracted by mini-css-extract-plugin\nexport var anchor = \"anchor-module--anchor--32227\";\nexport var text = \"anchor-module--text--f2bb6\";","import React from \"react\";\nimport * as styles from \"./paragraph.module.scss\";\n\nexport interface ParagraphProps {\n    children?: React.ReactNode;\n}\n\nexport const Paragraph = ({children}: ParagraphProps): JSX.Element => (\n    <div className={styles.paragraph}>{children}</div>\n);\n","// extracted by mini-css-extract-plugin\nexport var paragraph = \"paragraph-module--paragraph--e296c\";","// extracted by mini-css-extract-plugin\nexport var heading = \"heading-module--heading--1cb7a\";\nexport var link = \"heading-module--link--3f9ce\";","import React, {useRef} from \"react\";\nimport {kebabCase} from \"lodash\";\nimport {Link, ScrollTarget, scrollToRef} from \"../general\";\nimport * as styles from \"./heading.module.scss\";\n\nexport interface HeadingProps {\n    type: 1 | 2 | 3 | 4 | 5 | 6;\n    noLink?: boolean;\n    children: string;\n}\n\n// TODO: highlight selected heading\nexport const Heading = ({type, noLink, children}: HeadingProps): JSX.Element => {\n    const id = kebabCase(children);\n    const Element: keyof JSX.IntrinsicElements = `h${type}`;\n    const ref = useRef();\n\n    return noLink ? (\n        <Element className={styles.heading}>{children}</Element>\n    ) : (\n        <ScrollTarget ref={ref} id={id} type={Element} className={styles.heading}>\n            <Link\n                to={`#${id}`}\n                className={styles.link}\n                onClick={() => scrollToRef(ref)}\n            >#</Link>\n            {children}\n        </ScrollTarget>\n    );\n};\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\n var Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn _;\n\n}());\n\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n\nexport default prism;\n","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","import {PrismTheme} from \"prism-react-renderer\";\n\n// colors based on oceanic next from https://github.com/FormidableLabs/prism-react-renderer\nexport const colors = {\n    char: \"#d8dee9\",\n    comment: \"#3a454d\",\n    keyword: \"#c595c5\",\n    lineHighlight: \"#14161a\",\n    primitive: \"#5a9bcf\",\n    string: \"#c3e88d\",\n    variable: \"#d7deea\",\n    boolean: \"#ff8b50\",\n    punctuation: \"#89ddff\",\n    tag: \"#f07178\",\n    function: \"#79b6f2\",\n    className: \"#fac863\",\n    method: \"#6699cc\",\n    operator: \"#89ddff\",\n    this: \"#ff5370\"\n};\n\nexport const theme: PrismTheme = {\n    plain: {\n        backgroundColor: \"#0f1010\",\n        color: \"#fff\"\n    },\n    styles: [\n        {\n            types: [\"script\"],\n            style: {\n                color: \"#fff\"\n            }\n        },\n        {\n            types: [\"attr-name\"],\n            style: {\n                color: colors.keyword\n            }\n        },\n        {\n            types: [\"attr-value\"],\n            style: {\n                color: colors.string\n            }\n        },\n        {\n            types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\"],\n            style: {\n                color: colors.comment\n            }\n        },\n        {\n            types: [\"constant\", \"symbol\", \"deleted\"],\n            style: {\n                color: colors.primitive\n            }\n        },\n        {\n            types: [\"number\", \"boolean\"],\n            style: {\n                color: colors.boolean\n            }\n        },\n        {\n            types: [\"string\"],\n            style: {\n                color: colors.string\n            }\n        },\n        {\n            types: [\"punctuation\"],\n            style: {\n                color: colors.punctuation\n            }\n        },\n        {\n            types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n            style: {\n                color: colors.char\n            }\n        },\n        {\n            types: [\"function\", \"function-name\", \"property\"],\n            style: {\n                color: colors.function\n            }\n        },\n        {\n            types: [\"entity\", \"url\", \"variable\"],\n            style: {\n                color: colors.variable\n            }\n        },\n        {\n            types: [\"operator\"],\n            style: {\n                color: colors.operator\n            }\n        },\n        {\n            types: [\"keyword\"],\n            style: {\n                color: colors.keyword\n            }\n        },\n        {\n            types: [\"at-rule\", \"class-name\"],\n            style: {\n                color: colors.className\n            }\n        },\n        {\n            types: [\"parameter\"],\n            style: {\n                color: colors.boolean\n            }\n        },\n        {\n            types: [\"this\"],\n            style: {\n                color: colors.this\n            }\n        },\n        {\n            types: [\"global\"],\n            style: {\n                color: colors.className\n            }\n        },\n        {\n            types: [\"tag\"],\n            style: {\n                color: colors.tag\n            }\n        },\n        {\n            types: [\"important\"],\n            style: {\n                fontWeight: \"400\"\n            }\n        },\n        {\n            types: [\"bold\"],\n            style: {\n                fontWeight: \"700\"\n            }\n        },\n        {\n            types: [\"italic\"],\n            style: {\n                fontStyle: \"italic\"\n            }\n        },\n        {\n            types: [\"namespace\"],\n            style: {\n                opacity: 0.7\n            }\n        }\n    ]\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Highlight, {defaultProps, Language} from \"prism-react-renderer\";\nimport {theme} from \"./theme\";\nimport * as styles from \"./code.module.scss\";\n\ninterface Token {\n    types: string[];\n    content: string;\n    empty?: boolean;\n}\n\nconst processToken = (language: Language, token: Token) => {\n    const {types, content} = token;\n\n    // js/ts\n    if ([\"javascript\", \"js\", \"jsx\", \"typescript\", \"ts\", \"tsx\"].includes(language)) {\n        if (types.includes(\"operator\") && content === \"=>\") {\n            // change arrow function to keyword\n            types.splice(types.indexOf(\"operator\"), 1, \"keyword\");\n        } else if (types.includes(\"keyword\") && content.match(/\\b(this|super)\\b/)) {\n            // color this & super keywords\n            types.push(\"this\");\n        } else if (types.includes(\"plain\") && content.match(/\\b(module|global|window|document|console)\\b/)) {\n            // color globals\n            types.push(\"global\");\n        } else if (types.includes(\"spread\") && types.includes(\"attr-value\")) {\n            // fix prop spreads in jsx\n            types.splice(types.indexOf(\"attr-value\"), 1, \"plain\");\n        }\n    }\n\n    return token;\n};\n\nexport interface CodeblockProps {\n    language: Language;\n    className?: string;\n    children?: string;\n}\n\nexport const Codeblock = ({language, className, children}: CodeblockProps): JSX.Element => (\n    <div className={clsx(className, styles.codeblock)}>\n        <Highlight\n            {...defaultProps}\n            code={children?.trim() ?? \"\"}\n            language={language}\n            theme={theme}\n        >\n            {({className, style, tokens, getLineProps, getTokenProps}) => (\n                <div className={clsx(className, styles.content)} style={style}>\n                    {tokens.map((line, i) => (\n                        <div key={i} {...getLineProps({line, key: i})}>\n                            <span className={styles.number}>{i + 1}</span>\n                            {line.map((token, i) => (\n                                <span key={i} {...getTokenProps({token: processToken(language, token), key: i})}/>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </Highlight>\n    </div>\n);\n\nexport interface InlineCodeProps {\n    className?: string;\n    children?: string;\n}\n\nexport const InlineCode = ({className, children}: InlineCodeProps): JSX.Element => (\n    <span className={clsx(className, styles.inline)}>{children}</span>\n);\n","// extracted by mini-css-extract-plugin\nexport var codeblock = \"code-module--codeblock--bfd94\";\nexport var content = \"code-module--content--3d4e5\";\nexport var inline = \"code-module--inline--5f9ed\";\nexport var line = \"code-module--line--2bfd9\";\nexport var noMargin = \"code-module--no-margin--74dce\";\nexport var number = \"code-module--number--8b145\";","// extracted by mini-css-extract-plugin\nexport var banner = \"banner-module--banner--1230e\";\nexport var bold = \"banner-module--bold--a3e29\";\nexport var content = \"banner-module--content--d3679\";\nexport var icon = \"banner-module--icon--c0038\";\nexport var info = \"banner-module--info--960e2\";\nexport var warn = \"banner-module--warn--53f69\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport * as styles from \"./banner.module.scss\";\n\nexport const enum BannerType {\n    Info = \"info\",\n    Warn = \"warn\"\n}\n\nexport interface BannerProps {\n    type: BannerType;\n    bold?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Banner = ({type, bold = false, children}: BannerProps): JSX.Element => (\n    <div className={clsx(styles.banner, {\n        [styles.info]: type === BannerType.Info,\n        [styles.warn]: type === BannerType.Warn\n    })}>\n        {type === BannerType.Info ? (\n            <div className={styles.icon}>i</div>\n        ) : type === BannerType.Warn ? (\n            <div className={styles.icon}>!</div>\n        ) : null}\n        <div className={clsx(styles.content, {\n            [styles.bold]: bold\n        })}>{children}</div>\n    </div>\n);\n","import React, {useState} from \"react\";\nimport clsx from \"clsx\";\nimport {CodeblockProps} from \"../markdown\";\nimport * as styles from \"./codetabs.module.scss\";\nimport * as codeblockStyles from \"../markdown/code.module.scss\";\n\nexport interface CodeTabsProps {\n    names: Record<number, string>;\n    children: React.ReactElement<CodeblockProps>[];\n}\n\nexport const CodeTabs = ({names, children}: CodeTabsProps): JSX.Element => {\n    const [current, setCurrent] = useState(0);\n    const tab = children[current];\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.tabs}>\n                {children.map((_, i) => (\n                    <div\n                        key={i}\n                        className={clsx(styles.item, {[styles.active]: current === i})}\n                        onClick={() => setCurrent(i)}\n                    >{names?.[i] ?? `Tab ${i}`}</div>\n                ))}\n            </div>\n            <div className={clsx(styles.content, codeblockStyles.noMargin)}>\n                {tab}\n            </div>\n        </div>\n    );\n};\n\nexport interface CodeTabProps {\n    name: string;\n    children: JSX.Element;\n}\n","import React, {Children} from \"react\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {MDXComponents} from \"mdx/types\";\nimport {Language} from \"prism-react-renderer\";\nimport {Anchor} from \"./anchor\";\nimport {Paragraph} from \"./paragraph\";\nimport {Heading, HeadingProps} from \"./heading\";\nimport {Codeblock, InlineCode} from \"./code\";\nimport {List} from \"../list\";\nimport {Banner} from \"../banner\";\nimport {CodeTabs} from \"../codetabs\";\n\nexport const mdxComponents: MDXComponents = {\n    a: Anchor,\n    p: Paragraph,\n    h1: (props) => <Heading type={1} {...props as HeadingProps}/>,\n    h2: (props) => <Heading type={2} {...props as HeadingProps}/>,\n    h3: (props) => <Heading type={3} {...props as HeadingProps}/>,\n    h4: (props) => <Heading type={4} {...props as HeadingProps}/>,\n    h5: (props) => <Heading type={5} {...props as HeadingProps}/>,\n    h6: (props) => <Heading type={6} {...props as HeadingProps}/>,\n    pre: ({children}) => {\n        const {children: code, className} = (Children.only(children) as React.ReactHTMLElement<HTMLElement>).props;\n        const language = className?.replace(/^language-/, \"\") as Language;\n        return <Codeblock language={language}>{code as string}</Codeblock>;\n    },\n    code: InlineCode,\n    img: (props) => <img {...props} style={{maxWidth: \"100%\", ...props.style}}/>,\n    Anchor,\n    Paragraph,\n    Heading,\n    Codeblock,\n    InlineCode,\n    List,\n    Banner,\n    CodeTabs\n};\n\nexport interface MarkdownProps {\n    children?: React.ReactNode;\n}\n\nexport const Markdown = ({children}: MarkdownProps): JSX.Element => (\n    <MDXProvider components={mdxComponents}>\n        {children}\n    </MDXProvider>\n);\n","// extracted by mini-css-extract-plugin\nexport var active = \"codetabs-module--active--196a5\";\nexport var container = \"codetabs-module--container--65389\";\nexport var content = \"codetabs-module--content--d3d01\";\nexport var item = \"codetabs-module--item--ab659\";\nexport var tabs = \"codetabs-module--tabs--3225b\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport * as styles from \"./avatar.module.scss\";\n\nexport interface AvatarProps {\n    url: string;\n    size?: number;\n    className?: string;\n}\n\nexport const Avatar = ({url, size = 30, className}: AvatarProps): JSX.Element => (\n    <div\n        className={clsx(className, styles.avatar)}\n        style={{\n            backgroundImage: `url(${url})`,\n            width: size,\n            height: size\n        }}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"avatar-module--avatar--9b73c\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {Avatar} from \"./avatar\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./user.module.scss\";\n\nexport interface UserProps {\n    name: string;\n}\n\nexport const User = ({name}: UserProps): JSX.Element => {\n    const {avatar, links} = useUser(name);\n\n    return (\n        <Link className={styles.container} to={`https://github.com/${links.github}`}>\n            <Avatar className={styles.avatar} url={avatar} size={30} />\n            <div className={styles.name}>{name}</div>\n        </Link>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"user-module--avatar--3d0a3\";\nexport var container = \"user-module--container--b30bb\";\nexport var name = \"user-module--name--d5384\";","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface User {\n    name: string;\n    avatar: string;\n    links: {\n        github: string;\n    };\n}\n\ninterface UserData {\n    allUsersJson: {\n        nodes: User[];\n    };\n}\n\nconst useUserData = () => useStaticQuery<UserData>(graphql`\n    query UserData {\n        allUsersJson {\n            nodes {\n                name\n                avatar\n                links {\n                    github\n                }\n            }\n        }\n    }\n`);\n\nexport const useUsers = (): User[] => useUserData().allUsersJson.nodes;\n\nexport const useUser = (name: string): User | null => useUsers().find((user) => user.name === name) ?? null;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["r","e","t","f","n","Array","isArray","length","arguments","Center","_ref","children","React","className","Link","to","onClick","match","GatsbyLink","href","target","rel","scrollToElement","element","window","scrollTo","offsetTop","scrollToRef","ref","current","ScrollTarget","type","id","Element","useEffect","location","hash","ForwardContainer","forwardRef","useSiteMeta","useStaticQuery","site","siteMetadata","Header","links","siteMeta","avatar","useUser","author","Avatar","url","size","map","_ref2","i","text","link","key","activeClassName","partiallyActive","processEntries","Footer","left","right","Layout","title","date","updated","readTime","noContent","hasInfo","User","name","SEO","_props$description","_props$author","fullTitle","meta","props","join","description","content","property","concat","_toConsumableArray","Object","assign","Title","sub","ListItem","List","entries","Anchor","clsx","Paragraph","heading","Heading","noLink","_kebabCase","useRef","styles","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","alias","replace","o","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","hasOwnProperty","forEach","v","getLanguage","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","apply","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","keys","substring","middle","replacement","afterTokens","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","enumerable","configurable","writable","_extends","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","objectWithoutProperties","exclude","Highlight","Component","this$1","len","undefined","themeDict","prevTheme","prevLanguage","base","create","reduce","acc","themeEntry","includes","accStyle","themeToDict","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","colors","processToken","Codeblock","_children$trim","trim","InlineCode","_ref3","icon","BannerType","mdxComponents","a","h1","h2","h3","h4","h5","h6","pre","Children","img","maxWidth","Banner","bold","Info","Warn","CodeTabs","names","setCurrent","useState","tab","_names$i","Markdown","MDXProvider","components","backgroundImage","width","height","github","useUsers","allUsersJson","nodes","_useUsers$find","find","user","Symbol","module","exports","iteratee","result","accumulator","initAccum","reAsciiWord","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","object","arrayMap","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","arrayReduce","deburr","words","reApos","deburrLetter","basePropertyOf","freeGlobal","g","objectProto","nativeObjectToString","isOwn","unmasked","reHasUnicodeWord","freeSelf","self","Function","rsAstralRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","symbolTag","kebabCase","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","guard","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider"],"sourceRoot":""}