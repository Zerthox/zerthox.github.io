{"version":3,"file":"component---src-pages-guides-index-tsx-19f388fa4d562d969efe.js","mappings":"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","sources":["webpack://zerthox.github.io/./node_modules/clsx/dist/clsx.m.js","webpack://zerthox.github.io/./src/components/general/link.tsx","webpack://zerthox.github.io/./src/components/general/scroll.tsx","webpack://zerthox.github.io/./src/hooks/site.ts","webpack://zerthox.github.io/./src/components/layout/header.tsx","webpack://zerthox.github.io/./src/components/layout/header.module.scss","webpack://zerthox.github.io/./src/components/layout/footer.tsx","webpack://zerthox.github.io/./src/components/layout/footer.module.scss","webpack://zerthox.github.io/./src/components/layout/layout.tsx","webpack://zerthox.github.io/./src/components/layout/layout.module.scss","webpack://zerthox.github.io/./src/components/layout/seo.tsx","webpack://zerthox.github.io/./src/components/list/list.tsx","webpack://zerthox.github.io/./src/components/list/list.module.scss","webpack://zerthox.github.io/./src/components/user/avatar.tsx","webpack://zerthox.github.io/./src/components/user/avatar.module.scss","webpack://zerthox.github.io/./src/components/user/user.tsx","webpack://zerthox.github.io/./src/components/user/user.module.scss","webpack://zerthox.github.io/./src/hooks/users.ts","webpack://zerthox.github.io/./src/hooks/posts.ts","webpack://zerthox.github.io/./src/pages/guides/index.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from \"react\";\nimport {Link as GatsbyLink} from \"gatsby\";\n\nexport interface LinkProps {\n    to: string;\n    className?: string;\n    children?: React.ReactNode;\n    onClick?: () => void;\n}\n\nexport const Link = ({to, className, onClick, children}: LinkProps): JSX.Element => {\n    if (to && to.match(/^[/.#]/) && !to.match(/\\.(png|jpg|jpeg)$/)) {\n        return (\n            <GatsbyLink\n                to={to}\n                className={className}\n                onClick={onClick}\n            >{children}</GatsbyLink>\n        );\n    } else {\n        return (\n            <a\n                href={to}\n                className={className}\n                onClick={onClick}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >{children}</a>\n        );\n    }\n};\n","import React, {forwardRef, useEffect} from \"react\";\n\nexport const scrollToElement = (element: HTMLElement): void => window.scrollTo(0, element.offsetTop);\n\nexport const scrollToRef = <E extends HTMLElement>(ref: React.RefObject<E>): void => scrollToElement(ref.current);\n\nexport const scrollToId = (id: string): void => scrollToElement(document.getElementById(id));\n\ninterface RequiredProps<E extends HTMLElement> {\n    className?: string;\n    children?: React.ReactNode;\n    id: string;\n    ref: React.Ref<E>;\n}\n\nexport interface ScrollTargetProps<E extends HTMLElement> {\n    type?: React.ComponentType<RequiredProps<E>> | string;\n    id: string;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nconst ScrollTarget = <E extends HTMLElement>(\n    {type, id, className, children}: ScrollTargetProps<E>,\n    ref: React.RefObject<E>\n): JSX.Element => {\n    const Element = type;\n    useEffect(() => {\n        if (window.location.hash === `#${id}`) {\n            scrollToRef(ref);\n        }\n    }, [id, ref]);\n\n    return (\n        <Element className={className} id={id} ref={ref}>{children}</Element>\n    );\n};\n\nconst ForwardContainer = forwardRef(ScrollTarget);\n\nexport {ForwardContainer as ScrollTarget};\n","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface LinkEntry {\n    text: string;\n    link: string;\n}\n\nexport interface TextEntry {\n    text: string;\n    link?: string;\n}\n\nexport interface SiteMeta {\n    title: string;\n    description: string;\n    author: string;\n    siteUrl: string;\n    header: LinkEntry[];\n    footer: {\n        left: TextEntry[];\n        right: TextEntry[];\n    };\n}\n\ninterface SiteData {\n    site: {\n        siteMetadata: SiteMeta;\n    };\n}\n\nconst useSiteData = () => useStaticQuery<SiteData>(graphql`\n    query SiteMeta{\n        site {\n            siteMetadata {\n                title\n                description\n                author\n                siteUrl\n                header {\n                    text\n                    link\n                }\n                footer {\n                    left {\n                        text\n                        link\n                    }\n                    right {\n                        text\n                        link\n                    }\n                }\n            }\n        }\n    }\n`);\n\nexport const useSiteMeta = (): SiteMeta => useSiteData().site.siteMetadata;\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport {Avatar} from \"../user\";\nimport {useSiteMeta, LinkEntry} from \"../../hooks/site\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./header.module.scss\";\n\nexport interface HeaderProps {\n    links: LinkEntry[];\n}\n\nexport const Header = ({links}: HeaderProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const {avatar} = useUser(siteMeta.author);\n\n    return (\n        <div className={styles.header}>\n            <Link className={styles.title} to=\"/\">\n                <Avatar url={avatar} size={40}/>\n                <span className={styles.name}>Zerthox</span>\n            </Link>\n            <div className={styles.bar}>\n                {links.map(({text, link}, i) => (\n                    <Link key={i} to={link} className={styles.item} activeClassName={styles.active} partiallyActive={link !== \"/\"}>{text}</Link>\n                ))}\n            </div>\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var active = \"header-module--active--583af\";\nexport var bar = \"header-module--bar--d4a44\";\nexport var header = \"header-module--header--a0daf\";\nexport var item = \"header-module--item--e3e25\";\nexport var name = \"header-module--name--70fa5\";\nexport var title = \"header-module--title--78ab6\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {TextEntry} from \"../../hooks/site\";\nimport * as styles from \"./footer.module.scss\";\n\nconst processEntries = (links: TextEntry[]) => links.map(({text, link}, i) => (\n    <React.Fragment key={i}>\n        {i !== 0 && \" | \"}\n        {link ? <Link className={styles.link} to={link}>{text}</Link> : text}\n    </React.Fragment>\n));\n\nexport interface FooterProps {\n    left: TextEntry[];\n    right: TextEntry[];\n}\n\nexport const Footer = ({left, right}: FooterProps): JSX.Element => (\n    <div className={styles.footer}>\n        <div className={styles.left}>{processEntries(left)}</div>\n        <div className={styles.right}>{processEntries(right)}</div>\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var footer = \"footer-module--footer--d155e\";\nexport var left = \"footer-module--left--d6390\";\nexport var link = \"footer-module--link--06b40\";\nexport var right = \"footer-module--right--83036\";","import React from \"react\";\nimport {Header} from \"./header\";\nimport {Footer} from \"./footer\";\nimport {User} from \"../user\";\nimport {useSiteMeta} from \"../../hooks/site\";\nimport \"normalize.css\";\nimport * as styles from \"./layout.module.scss\";\n\nexport interface LayoutProps {\n    title?: string;\n    author?: string;\n    date?: string;\n    updated?: string;\n    readTime?: number;\n    noContent?: boolean;\n    children?: React.ReactNode;\n}\n\nexport const Layout = ({title, author, date, updated, readTime, noContent = false, children}: LayoutProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const hasInfo = author || date || readTime;\n\n    return (\n        <>\n            <div className={styles.main}>\n                <Header links={siteMeta.header}></Header>\n                <div className={styles.body}>\n                    {title ? (\n                        <div className={styles.title}>\n                            <div className={styles.heading}>{title}</div>\n                            {hasInfo ? (\n                                <div className={styles.info}>\n                                    {author ? (\n                                        <div className={styles.author}>\n                                            by <User name={author}/>\n                                        </div>\n                                    ): null}\n                                    {date ? (\n                                        <div className={styles.date}>\n                                            {date}\n                                            {updated ? <span className={styles.updated}> (Updated: {updated})</span> : null}\n                                            {readTime ? (\n                                                <>\n                                                    <span className={styles.separator}>|</span>\n                                                    <span>{readTime}min read</span>\n                                                </>\n                                            ) : null}\n                                        </div>\n                                    ) : null}\n                                </div>\n                            ) : null}\n                        </div>\n                    ) : null}\n                    {noContent ? children : (\n                        <div className={styles.content}>{children}</div>\n                    )}\n                </div>\n                <Footer {...siteMeta.footer}/>\n            </div>\n        </>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var author = \"layout-module--author--34e41\";\nexport var body = \"layout-module--body--a3b83\";\nexport var content = \"layout-module--content--ba793\";\nexport var date = \"layout-module--date--211e7\";\nexport var heading = \"layout-module--heading--dd2ea\";\nexport var info = \"layout-module--info--8110f\";\nexport var main = \"layout-module--main--3f0fd\";\nexport var separator = \"layout-module--separator--3ea5b\";\nexport var title = \"layout-module--title--c05ab\";\nexport var updated = \"layout-module--updated--8118a\";","import React from \"react\";\nimport {useSiteMeta} from \"../../hooks/site\";\n\nexport type MetaProps = JSX.IntrinsicElements[\"meta\"];\n\nexport interface SEOProps {\n    title?: string;\n    fullTitle?: boolean;\n    description?: string;\n    author?: string;\n    meta?: MetaProps[];\n    children?: React.ReactNode;\n}\n\nexport const SEO = ({fullTitle = false, meta = [], children, ...props}: SEOProps): JSX.Element => {\n    const siteMeta = useSiteMeta();\n    const title = [props.title, !fullTitle ? siteMeta.title : null].join(\" - \");\n    const description = props.description ?? siteMeta.description;\n    const author = props.author ?? siteMeta.author;\n\n    return (\n        <>\n            <title>{title}</title>\n            {[\n                {name: \"description\", content: description},\n                {property: \"og:title\", content: title},\n                {property: \"og:description\", content: description},\n                {property: \"og:type\", content: \"website\"},\n                {name: \"twitter:card\", content: \"summary\"},\n                {name: \"twitter:creator\", content: author},\n                {name: \"twitter:title\", content: title},\n                {name: \"twitter:description\", content: description},\n                ...meta\n            ].map((props, i) => <meta key={i} {...props}/>)}\n            {children}\n        </>\n    );\n};\n","import React from \"react\";\nimport {Link} from \"../general\";\nimport {User} from \"../user\";\nimport * as styles from \"./list.module.scss\";\n\nexport interface ListItemProps {\n    name: string;\n    to: string;\n    description?: string;\n    date?: string;\n    author?: string;\n}\n\nexport const ListItem = ({name, description, date, author, to}: ListItemProps): JSX.Element => (\n    <div className={styles.item}>\n        <Link className={styles.link} to={to}>\n            <div className={styles.title}>\n                <div className={styles.name}>{name}</div>\n                {date ? (\n                    <div className={styles.date}>{date}</div>\n                ) : null}\n            </div>\n            {description ? <div className={styles.description}>{description}</div> : null}\n        </Link>\n        {author ? (\n            <div className={styles.author}>\n                by <User name={author}/>\n            </div>\n        ) : null}\n    </div>\n);\n\nexport interface ListProps {\n    entries: ListItemProps[];\n}\n\nexport const List = ({entries}: ListProps): JSX.Element => (\n    <div className={styles.list}>\n        {entries.map((props, i) => (\n            <ListItem key={i} {...props}/>\n        ))}\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nexport var author = \"list-module--author--82ff7\";\nexport var date = \"list-module--date--f1eea\";\nexport var description = \"list-module--description--64b4a\";\nexport var item = \"list-module--item--2ff2e\";\nexport var link = \"list-module--link--a777c\";\nexport var list = \"list-module--list--48ac1\";\nexport var name = \"list-module--name--27e7d\";\nexport var title = \"list-module--title--83b07\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport * as styles from \"./avatar.module.scss\";\n\nexport interface AvatarProps {\n    url: string;\n    size?: number;\n    className?: string;\n}\n\nexport const Avatar = ({url, size = 30, className}: AvatarProps): JSX.Element => (\n    <div\n        className={clsx(className, styles.avatar)}\n        style={{\n            backgroundImage: `url(${url})`,\n            width: size,\n            height: size\n        }}\n    />\n);\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"avatar-module--avatar--9b73c\";","import React from \"react\";\nimport {Link} from \"../general\";\nimport {Avatar} from \"./avatar\";\nimport {useUser} from \"../../hooks/users\";\nimport * as styles from \"./user.module.scss\";\n\nexport interface UserProps {\n    name: string;\n}\n\nexport const User = ({name}: UserProps): JSX.Element => {\n    const {avatar, links} = useUser(name);\n\n    return (\n        <Link className={styles.container} to={`https://github.com/${links.github}`}>\n            <Avatar className={styles.avatar} url={avatar} size={30} />\n            <div className={styles.name}>{name}</div>\n        </Link>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"user-module--avatar--3d0a3\";\nexport var container = \"user-module--container--b30bb\";\nexport var name = \"user-module--name--d5384\";","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface User {\n    name: string;\n    avatar: string;\n    links: {\n        github: string;\n    };\n}\n\ninterface UserData {\n    allUsersJson: {\n        nodes: User[];\n    };\n}\n\nconst useUserData = () => useStaticQuery<UserData>(graphql`\n    query UserData {\n        allUsersJson {\n            nodes {\n                name\n                avatar\n                links {\n                    github\n                }\n            }\n        }\n    }\n`);\n\nexport const useUsers = (): User[] => useUserData().allUsersJson.nodes;\n\nexport const useUser = (name: string): User | null => useUsers().find((user) => user.name === name) ?? null;\n","import {useStaticQuery, graphql} from \"gatsby\";\n\nexport interface Frontmatter {\n    title: string;\n    author?: string;\n    date?: string;\n    updated?: string;\n    tags?: string[];\n    slug?: string;\n}\n\nexport interface Fields {\n    slug: string;\n    timeToRead: number;\n}\n\nexport interface Post {\n    frontmatter: Frontmatter;\n    fields: Fields;\n    excerpt: string;\n}\n\ninterface PostData {\n    allMdx: {\n        nodes: Post[];\n    };\n}\n\nconst usePostData = () => useStaticQuery<PostData>(graphql`\n    query Posts {\n        allMdx(sort: {frontmatter: {date: DESC}}) {\n            nodes {\n                frontmatter {\n                    title\n                    date(formatString: \"DD MMMM YYYY\")\n                    updated(formatString: \"DD MMMM YYYY\")\n                    author\n                    tags\n                }\n                excerpt\n                fields {\n                    slug\n                    timeToRead\n                }\n            }\n        }\n    }\n`);\n\nexport const usePosts = (): Post[] => usePostData().allMdx.nodes;\n\nexport const usePostsIn = (prefix: string): Post[] => usePosts().filter(({fields}) => fields.slug.startsWith(\"/\" + prefix));\n","import React from \"react\";\nimport {Layout, SEO} from \"../../components/layout\";\nimport {List} from \"../../components/list\";\nimport {usePostsIn} from \"../../hooks/posts\";\n\nconst Blog = (): JSX.Element => {\n    const posts = usePostsIn(\"guides\");\n\n    return (\n        <Layout title=\"Guides\">\n            {posts.length > 0 ? (\n                <List\n                    entries={posts.map(({frontmatter, fields, excerpt}) => ({\n                        name: frontmatter.title,\n                        to: fields.slug,\n                        date: frontmatter.date,\n                        author: frontmatter.author,\n                        description: excerpt\n                    }))}\n                />\n            ) : \"Nothing here (yet).\"}\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const Head = (): JSX.Element => <SEO title=\"Guides\"/>;\n"],"names":["r","e","t","f","n","Array","isArray","length","arguments","Link","_ref","to","className","onClick","children","match","React","GatsbyLink","href","target","rel","scrollToElement","element","window","scrollTo","offsetTop","scrollToRef","ref","current","ScrollTarget","type","id","Element","useEffect","location","hash","ForwardContainer","forwardRef","useSiteMeta","useStaticQuery","site","siteMetadata","Header","links","siteMeta","avatar","useUser","author","Avatar","url","size","map","i","text","link","key","activeClassName","partiallyActive","processEntries","Footer","_ref2","left","right","Layout","title","date","updated","readTime","noContent","hasInfo","header","User","name","footer","SEO","fullTitle","meta","props","join","description","content","property","ListItem","List","entries","clsx","style","backgroundImage","width","height","github","useUsers","allUsersJson","nodes","find","user","usePosts","allMdx","posts","prefix","filter","fields","slug","startsWith","frontmatter","excerpt","Head"],"sourceRoot":""}